package com.pig84.ab.action;

import java.io.IOException;

import javax.servlet.http.HttpServletResponse;

import org.apache.struts2.ServletActionContext;
import org.apache.struts2.convention.annotation.Action;
import org.apache.struts2.convention.annotation.Namespace;
import org.apache.struts2.convention.annotation.ParentPackage;
import org.apache.struts2.convention.annotation.Result;
import org.springframework.beans.factory.annotation.Autowired;

import com.pig84.ab.service.ILineService;

/**
 * 
 * @author wangwenbin
 *
 * 2015-3-27
 */
/**
 * 用户招募线路站点的转化
 */
@ParentPackage("no-interceptor")
@Namespace("/app_conversionLineStation")
@SuppressWarnings("all")
public class ConversionLineStationAction extends BaseAction{

	@Autowired
	private ILineService lineService;
	
	/**跳转到信息提示页面,确保正常操作执行修改数据**/
	@Action(value = "toConversionJsp", results = { @Result(name = "success", location = "../../conversion.jsp") })
	public String toConversionJsp(){
		return SUCCESS;
	}
	
	/**用户招募线路站点的转化**/
	@Action(value = "conversion",results={@Result(type="json")})
	public String conversion() throws IOException{
		HttpServletResponse response = ServletActionContext.getResponse();
		response.setContentType("text/html;charset=UTF-8");
		String pwd = request.getParameter("pwd");
		if("7EF1F4E9181FDD203534B0E037BACD4E954ED69".equals(pwd)){
			int count = lineService.queryConversionTimes();
			if(count<=0){
				/**以前没有执行过conversion方法**/
				int statu =  lineService.conversionValue();
				if(statu>=1){
					lineService.updateSomeTable();
					lineService.conversionValue();
					response.getWriter().print("用户招募线路站点的转化---完成");
				}else{
					response.getWriter().print("用户招募线路站点的转化---异常");
				}
			}else{
				response.getWriter().print("用户招募线路站点的转化---失败----已经执行过");
			}
		}else{
			response.getWriter().print("执行密码错误");
		}
		return null;
	}
}
